name: cd

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

env: 
  AWS_REGION: eu-west-2
  ECR_REPOSITORY: testeksdeployment
  SHORT_SHA: $(echo ${{ github.sha }} | cut -c 1-8)
  EKS_CLUSTER_NAME: devopsthehardway-cluster
  K8S_NAMESPACE: default
  K8S_DEPLOYMENT: queue
  
jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      registry: ${{ steps.reg_name.outputs.reg }}
    steps:
    - name: Clone
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
      
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
    - run: echo "reg=${{ steps.login-ecr.outputs.registry }}" >> $GITHUB_OUTPUT
      id: reg_name

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      run: |
        cd k8s-fleetman-queue/
        docker image build \
        --tag ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:latest \
        --tag ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ env.SHORT_SHA }} \
        .
        docker push ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:latest
        docker push ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ env.SHORT_SHA }}
  job2:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - run: echo ${{needs.build.outputs.registry}} 
